{
  "name": "georio",
  "version": "1.0.0",
  "description": "Database and API for manaing spatial data in the imagineRio project",
  "author": "Axis Maps",
  "main": "src/index.js",
  "private": false,
  "license": "MIT",
  "engines": {
    "node": ">=8",
    "yarn": "*"
  },
  "scripts": {
    "precommit": "yarn validate",
    "prestart": "yarn docs",
    "start": "cross-env NODE_ENV=production node ./src/index.js",
    "dev": "NODE_ENV=development nodemon ./src/index.js",
    "lint": "eslint '**/*.js' --ignore-path .gitignore --ignore-pattern internals/scripts",
    "lint:fix": "yarn lint -- --fix",
    "test": "yarn db:migrate:test && cross-env NODE_ENV=test jest --forceExit --detectOpenHandles --coverage --coverageDirectory=coverage",
    "test:unit": "cross-env NODE_ENV=test jest --forceExit --detectOpenHandles --testPathPattern=\"(/src/.*)\\.(spec).js$\"",
    "test:integration": "cross-env NODE_ENV=test jest --forceExit --detectOpenHandles --testPathPattern=\"(/src/.*)\\.(test).js$\"",
    "validate": "yarn lint && yarn test",
    "postpublish": "git push --tags",
    "docs": "npx apidoc -i src -o docs",
    "db:migrate": "sequelize db:migrate",
    "db:migrate:test": "cross-env NODE_ENV=test sequelize db:migrate:undo:all && cross-env NODE_ENV=test sequelize db:migrate",
    "db:migrate:undo": "sequelize db:migrate:undo",
    "db:migrate:reset": "sequelize db:migrate:undo:all && sequelize db:migrate",
    "db:seed": "sequelize db:seed:all",
    "db:seed:undo": "sequelize db:seed:undo:all",
    "db:seed:reset": "sequelize db:seed:undo:all && sequelize db:seed:all"
  },
  "keywords": [
    "express",
    "node",
    "node.js",
    "passport",
    "es6",
    "es7",
    "es8",
    "es2017",
    "jest",
    "eslint",
    "REST",
    "API",
    "boilerplate",
    "generator",
    "starter project",
    "aws"
  ],
  "dependencies": {
    "@mapbox/tilebelt": "^1.0.1",
    "async": "^2.6.1",
    "aws-sdk": "^2.253.1",
    "axios": "^0.19.0",
    "axios-retry": "^3.1.1",
    "bcryptjs": "2.4.3",
    "bluebird": "^3.5.0",
    "body-parser": "^1.17.0",
    "celebrate": "^9.0.1",
    "color-convert": "^2.0.0",
    "compression": "^1.6.2",
    "cors": "^2.8.3",
    "cross-env": "^5.0.1",
    "dbgeo": "^1.1.0",
    "dotenv-safe": "^5.0.1",
    "es-class": "^2.1.1",
    "express": "^4.15.2",
    "express-interceptor": "^1.2.0",
    "express-validation": "^1.0.2",
    "helmet": "^3.5.0",
    "http-status": "^1.0.1",
    "joi": "^14.3.1",
    "lodash": "^4.17.14",
    "method-override": "^2.3.8",
    "module-alias": "^2.0.6",
    "moment-timezone": "^0.5.13",
    "nanoid": "^2.0.3",
    "node-sanitizer": "^1.0.3",
    "ora": "^4.0.3",
    "passport": "^0.4.0",
    "passport-http-bearer": "^1.0.1",
    "passport-jwt": "4.0.0",
    "path-match": "^1.2.4",
    "pg": "^7.6.0",
    "pg-hstore": "^2.3.2",
    "response-time": "^2.3.2",
    "sequelize": "^4.41.0",
    "shapefile": "^0.6.6",
    "through": "^2.3.8",
    "underscore": "^1.9.1",
    "universal-cookie-express": "^3.0.7",
    "uuid": "^3.1.0",
    "winston": "^3.1.0",
    "winston-cloudwatch": "^2.0.2"
  },
  "devDependencies": {
    "@types/jest": "^23.3.3",
    "eslint": "^5.6.1",
    "eslint-config-astro": "^1.0.6",
    "eslint-import-resolver-module-alias": "^0.1.0",
    "eslint-plugin-import": "^2.14.0",
    "husky": "^0.14.3",
    "jest": "^24.1.0",
    "jest-dom": "^3.0.1",
    "jest-express": "^1.8.0",
    "jest-tobetype": "^1.2.0",
    "mock-express-request": "^0.2.2",
    "mock-express-response": "^0.2.2",
    "nodemon": "^1.11.0",
    "opn-cli": "^3.1.0",
    "prettier-eslint": "^8.8.2",
    "sequelize-cli": "^5.5.1",
    "supertest": "^3.0.0"
  },
  "_moduleAliases": {
    "@app": "src",
    "@config": "src/config",
    "@api": "src/api",
    "@middlewares": "src/middlewares",
    "@models": "src/models",
    "@services": "src/services",
    "@utils": "src/utils"
  },
  "nyc": {
    "include": "src",
    "exclude": [
      "**/*.spec.js",
      "**/*.test.js",
      "**/index.js"
    ]
  },
  "jest": {
    "moduleNameMapper": {
      "^@app(.*)$": "<rootDir>/src$1",
      "^@boot(.*)$": "<rootDir>/src/boot$1",
      "^@config(.*)$": "<rootDir>/src/config$1",
      "^@api(.*)$": "<rootDir>/src/api$1",
      "^@middlewares(.*)$": "<rootDir>/src/middlewares$1",
      "^@models(.*)$": "<rootDir>/src/models$1",
      "^@services(.*)$": "<rootDir>/src/services$1",
      "^@utils(.*)$": "<rootDir>/src/utils$1"
    },
    "testRegex": "(/src/.*)\\.(test|spec).js$",
    "testPathIgnorePatterns": [
      "\\index.js$",
      "(/src/.*)\\.(validator|validation|config|index).js$"
    ],
    "moduleFileExtensions": [
      "js",
      "jsx"
    ],
    "collectCoverageFrom": [
      "src/**/*{js,jsx}",
      "!src/**/*{epics}.js",
      "!src/**/*{reducers}.js",
      "!src/**/*{store}.js",
      "!src/**/*{routes|route}.js",
      "!src/**/*{actionTypes}.js",
      "!src/**/index.js",
      "!src/**/*.validation.js",
      "!src/**/*.validator.js",
      "!src/config/**",
      "!src/database/**",
      "!src/models/**",
      "!src/utils/ErrorCode/**",
      "!src/services/http/**",
      "!<rootDir>/node_modules/"
    ],
    "coverageReporters": [
      "json",
      "html",
      "lcov",
      "text",
      "clover"
    ]
  },
  "apidoc": {
    "url": "http://beirut.georio.levantcarta.org/",
    "sampleUrl": "http://beirut.georio.levantcarta.org/"
  }
}
